/**
 * CJS（CommonJS）和ESM（ECMAScript Modules）是两种不同的模块系统，用于在JavaScript中组织和导入/导出代码。它们在语法、加载方式和用途上存在一些区别。

1、语法差异：

CJS使用require()函数来引入模块，使用module.exports或exports来导出模块。
ESM使用import语句来引入模块，使用export语句来导出模块。
加载方式：
2、加载方式
CJS是同步加载模块的，当代码需要引入一个模块时，它会立即加载该模块，并阻塞后续代码的执行，直到模块加载完成。这种加载方式适用于服务器端和早期的前端开发环境，如Node.js。
ESM是异步加载模块的，它使用静态分析来确定模块之间的依赖关系，并在运行时按需加载模块。这种加载方式适用于现代的浏览器环境和一些新的前端开发框架，如Webpack和Rollup。
导入和导出：

3、导入和导出：

CJS模块的导入是值拷贝，也就是说，当一个模块被导入到另一个模块时，导入的是模块的值的拷贝，后续对导入模块的修改不会影响原始模块的值。
ESM模块的导入是绑定（binding）的，也就是说，当一个模块被导入到另一个模块时，导入的是模块的绑定，后续对导入模块的修改会影响原始模块的值。
应用场景：

CJS主要应用于服务器端开发，它适用于模块加载顺序固定且同步的环境。Node.js使用CJS作为默认的模块系统。
ESM主要用于现代的浏览器环境和前端开发，它适用于异步加载模块的环境。ESM在现代的JavaScript标准中得到了广泛支持，并逐渐取代了CJS在前端开发中的地位。
 */
